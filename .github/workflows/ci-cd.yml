name: Angular Movie App CI/CD

on:
  push:
    branches: [ dev, main ]
  pull_request:
    branches: [ dev, main ]

env:
  NODE_VERSION: '18'
  TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}

jobs:
  # Job 1: Linting and Unit Tests
  test-and-lint:
    name: 'Lint & Test'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps
          
      - name: Run linting
        run: |
          npm run lint
          
      - name: Run unit tests
        run: |
          npm run test -- --no-watch --no-progress --browsers=ChromeHeadless --code-coverage
          
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: success()
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          
  # Job 2: Build Check
  build-check:
    name: 'Build Check'
    runs-on: ubuntu-latest
    needs: test-and-lint
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps
          
      - name: Build application
        run: |
          npm run build
        env:
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 1

  # Job 3: Deploy to Vercel
  deploy:
    name: 'Deploy to Vercel'
    runs-on: ubuntu-latest
    needs: [test-and-lint, build-check]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps
          
      - name: Build for production
        run: |
          npm run build
        env:
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
          
      - name: Deploy to Vercel
        uses: vercel/action@v1
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          
  # Job 4: Preview Deploy
  preview-deploy:
    name: 'Preview Deploy'
    runs-on: ubuntu-latest
    needs: [test-and-lint, build-check]
    if: github.ref == 'refs/heads/dev' || github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps
          
      - name: Build for preview
        run: |
          npm run build
        env:
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
          
      - name: Deploy Preview to Vercel
        uses: vercel/action@v1
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          
      - name: Comment PR with preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸš€ Preview deployment is ready! Check it out at the Vercel dashboard.'
            })

  # Job 5: Notify on Success
  notify-success:
    name: 'Notify Success'
    runs-on: ubuntu-latest
    needs: [deploy]
    if: success() && github.ref == 'refs/heads/main'
    
    steps:
      - name: Notify deployment success
        run: |
          echo "ðŸŽ‰ Successfully deployed to production!"
          echo "All checks passed and application is live on Vercel."
